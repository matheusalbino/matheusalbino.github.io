name: Deploy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: 12

      - uses: yunree/package-version@v1

      - uses: actions/cache@v2
        id: cache-node
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('./package-lock.json') }}

      - if: steps.cache-node.outputs.cache-hit != 'true'
        run: npm install

      - run: echo ${{ secrets.DOTENV }} > .env.production

      - run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy & Invalidate Cache
        env:
          AWS_S3_BUCKETNAME: ${{ secrets.AWS_S3_BUCKETNAME }}
          AWS_CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}
        run: |
          aws s3 sync dist s3://$AWS_S3_BUCKETNAME/ --delete
          aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_DISTRIBUTION_ID --paths "/*"

      - uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
          version: ${{ env.PACKAGE_VERSION }}
          version_prefix: "v"
          sourcemaps: "./dist/static/js ./dist/static/css"
